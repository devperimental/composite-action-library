name: Build And Web Deploy
description: Build And Web Deploy
inputs:
  nuget-username:
    description: nuget username
    required: true
  src-dir:
    description: source directory
    required: true
  repo-organisation:
    description: repo organisation name
    required: true
  team-pat:
    description: team personal access token
    required: true
  web_project_path: 
    description: web_project_path
    required: true
  publish_path: 
    description: publish_path
    required: true
  publish_artifact: 
    description: publish_artifact
    required: true
  web_app_name: 
    description: web_app_name
    required: true
  web_app_slot: 
    description: web_app_slot
    required: true
  web_app_publish_profile: 
    description: web_app_publish_profile
    required: true
  test_project_name: 
    description: test_project_name
    required: true
  run_integration_tests:
    description: run_integration_tests
    required: true
runs:
  using: composite
  steps:

    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'

    - name: Add Github pacakges nuget source
      run: |
        dotnet nuget add source --username ${{ inputs.nuget-username}} --password ${{ inputs.team-pat }} --store-password-in-clear-text --name github 'https://nuget.pkg.github.com/${{inputs.repo-organisation}}/index.json'
      shell: bash
      
    - name: Install dependancies
      run: dotnet restore ${{inputs.src-dir}}
      shell: bash

    - name: Build solution
      run: dotnet build ${{inputs.src-dir}} --configuration Release --no-restore
      shell: bash

    - name: dotnet publish
      run: dotnet publish ${{ inputs.web_project_path }} -c Release -o ${{ inputs.publish_path }}
      shell: bash

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.publish_artifact }}
        path: ${{ inputs.publish_path }}

    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.publish_artifact }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ inputs.web_app_name }}
        slot-name: ${{ inputs.web_app_slot }}
        publish-profile: ${{ inputs.web_app_publish_profile }}
        package: .

    - name: install browsers
      if: ${{ inputs.run_integration_tests == 'true' }}
      run: pwsh ${{ inputs.src-dir}}/${{inputs.test_project_name}}/bin/Release/net8.0/playwright.ps1 install
      shell: bash

    - name: Run integration tests
      if: ${{ inputs.run_integration_tests == 'true' }}
      run: dotnet test ${{ inputs.src-dir}} --filter 'FullyQualifiedName~IntegrationTests' --configuration Release --environment SITE_URL=${{ steps.deploy-to-webapp.outputs.webapp-url }}
      shell: bash